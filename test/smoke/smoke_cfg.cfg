daemonize = false
rootdir   = /tmp/

server {
	addr    = 127.0.0.1
	port    = 8081
	threads = 1

	read-timeout    = { 10, 0 }
	write-timeout   = { 10, 0 }
	pending-timeout = { 10, 0 }
	max-pending     = 1

	downstream ds {
		enabled     = true
		addr        = 127.0.0.1
		port        = 8090
		connections = 1
		retry       = { 1, 0 }
	}

	vhost localhost {
		aliases = { 127.0.0.1:8081, localhost:8081 }

		logging {
			request {
				enabled = true
				output  = "file:./rproxy.log"
				format  = '{SRC} {PROXY} [{TS}] "{METH} {URI} {PROTO}" - {STATUS} - "{REF}" - "{UA}" - "{HOST}'
			}

			error {
				enabled = true
				output  = "file:./rproxy_error.log"
			}
		}

		rule simple {
			uri-match   = "/simple/"
			downstreams = { ds }

			headers {
				x-forwarded-for = true
			}
		}

		rule notfound {
			uri-match   = "/notfound/"
			downstreams = { ds }

			headers {
				x-forwarded-for = true 
			}
		}

		rule busy {
			uri-match = "/busy/"
			downstreams = { ds }
			headers       { x-forwarded-for = true }
		}

		rule data {
			uri-match = "/data/"
			downstreams = { ds }
			headers       { x-forwarded-for = true }
		}

		rule forwarded {
			uri-match = "/forwarded/"
			downstreams = { ds }
			headers       { x-forwarded-for = true }
		}

		rule slowdata {
			uri-match = "/slowdata/"
			downstreams = { ds }
			headers       { x-forwarded-for = true }
		}

		rule badchunklen {
			uri-match = "/badchunklength/"
			downstreams = { ds }
			headers       { x-forwarded-for = true }
		}

		rule badchunktrans {
			uri-match = "/badchunktransfer/"
			downstreams = { ds }
			headers       { x-forwarded-for = true }
		}
	}
}

server {
	addr     = 127.0.0.1
	port     = 8082
	threads  = 1

	read-timeout    = { 10, 0 }
	write-timeout   = { 10, 0 }
	pending-timeout = { 10, 0 }
	max-pending     = 1

	downstream ds {
		addr        = 127.0.0.1
		port        = 8090
		connections = 1
		retry       = { 1, 0 }
	}

	ssl {
		enabled       = true
		protocols-on  = { TLSv1, SSLv3 }
		protocols-off = { SSLv2        }
		cert          = ./test/smoke/server.crt
		key           = ./test/smoke/server.key
		ciphers       = "eNULL:RC4-SHA"
	}

	vhost localhost {
		aliases = { 127.0.0.1:8082, localhost:8082 }

		logging {
			request {
				enabled = true
				output  = "file:./rproxy.log"
				format  = '{SRC} {PROXY} [{TS}] "{METH} {URI} {PROTO}" - {STATUS} - "{REF}" - "{UA}" - "{HOST}'
			}

			error {
				enabled = true
				output  = "file:./rproxy_error.log"
			}
		}

		rule simple {
			uri-match = "/simple/"
			downstreams = { ds }
		}
	}
}

server {
	addr      = 127.0.0.1
	port      = 8083
	threads   = 1

	read-timeout    = { 10, 0 }
	write-timeout   = { 10, 0 }
	pending-timeout = { 10, 0 }
	max-pending     = 1

	ssl {
		enabled           = true
		protocols-on      = { TLSv1, SSLv3 }
		protocols-off     = { SSLv2        }
		cert              = ./test/smoke/server.crt
		key               = ./test/smoke/server.key
		ca                = ./test/smoke/ca.crt
		ciphers           = "eNULL:RC4-SHA"
		verify-peer       = true
		verify-depth      = 4
		enforce-peer-cert = true
		cache-enabled     = false
	}

	downstream ds {
		addr        = 127.0.0.1
		port        = 8090
		connections = 1
		retry       = { 1, 0 }
	}

	vhost localhost {
		aliases = { 127.0.0.1:8083, localhost:8083 }

		logging {
			request {
				enabled = true
				output  = "file:./rproxy.log"
				format  = '{SRC} {RULE} {PROXY} [{TS}] "{METH} {URI} {PROTO}" - {STATUS} - "{REF}" - "{UA}" - "{HOST}'
			}

			error {
				enabled = true
				output  = "file:./rproxy_error.log"
			}
		}

		headers {
			x-ssl-subject     = true
			x-ssl-issuer      = true
			x-ssl-notbefore   = true
			x-ssl-notafter    = true
			x-ssl-serial      = true
			x-ssl-cipher      = true
			x-ssl-certificate = true

			x509-extension {
				name = "x-ssl-extension"
				oid  = "1.2.3.4"
			}
		}

		rule simple {
			uri-match = "/simple/"
			downstreams = { ds }
		}

		rule subject {
			uri-match = "/subject/"
			downstreams = { ds }
		}

		rule issuer {
			uri-match = "/issuer/"
			downstreams = { ds }
		}

		rule notbefore {
			uri-match = "/notbefore/"
			downstreams = { ds }
		}

		rule notafter {
			uri-match = "/notafter/"
			downstreams = { ds }
		}

		rule serial {
			uri-match = "/serial/"
			downstreams = { ds }
		}

		rule cipher {
			uri-match = "/cipher/"
			downstreams = { ds }
		}

		rule certificate {
			uri-match = "/certificate/"
			downstreams = { ds }
		}

		rule useragent {
			uri-match = "/useragent/"
			downstreams = { ds }
		}

		rule host {
			uri-match = "/host/"
			downstreams = { ds }
		}

		rule accept {
			uri-match = "/accept/"
			downstreams = { ds }
		}

		rule extension {
			uri-match = "/extension/"
			downstreams = { ds }
		}

		rule slowdata {
			uri-match = "/slowdata/"
			downstreams = { ds }
		}

		rule badchunklen {
			uri-match = "/badchunklength/"
			downstreams = { ds }
		}

		rule badchunkxfer {
			uri-match = "/badchunktransfer/"
			downstreams = { ds }
		}
	}
}

server {
	addr    = 127.0.0.1
	port    = 8084
	threads = 1

	read-timeout    = { 10, 0 }
	write-timeout   = { 10, 0 }
	pending-timeout = { 10, 0 }
	max-pending     = 1

	downstream ds1 {
		addr        = 127.0.0.1
		port        = 8090
		connections = 1
		retry       = { 1, 0 }
	}

	downstream ds2 {
		addr        = 127.0.0.1
		port        = 8091
		connections = 1
		retry       = { 1, 0 }
	}

	vhost localhost {
		aliases = { localhost:8084, 127.0.0.1:8084 }

		rule test_rr {
			uri-match = "/test_rr/"
			downstreams = { ds1, ds2 }
			lb-method   = roundrobin
		}
	}
}

